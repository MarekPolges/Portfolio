{"ast":null,"code":"var _jsxFileName = \"/Users/marekpolgesek/Desktop/{coding, dev}/Frontend Projects/Portfolio/portfolio-website/src/Portfolio-Items/MelodyGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Synth from \"/Users/marekpolgesek/Desktop/{coding, dev}/Frontend Projects/Portfolio/portfolio-website/src/Images/GayestSynth.png\";\nimport \"./Portfolio.css\";\nimport \"animate.css\";\nimport MelodyGeneratorScr from \"../Images/MelodyGenerator.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MelodyGenerator = () => {\n  _s();\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => {\n    setModal(!modal), console.log(\"toggled\");\n  };\n  const [className, setClassName] = useState(false);\n  const handleHover = () => {\n    setClassName(className => !className);\n  };\n  let toggleClassCheck = className ? \" animate__animated animate__wobble\" : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"project-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Synth,\n          onClick: toggleModal,\n          className: `img${toggleClassCheck}`,\n          onMouseOver: handleHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Melody Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Webdesign & Webdevelopment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleModal,\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: MelodyGeneratorScr,\n            className: \"screenshot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Melody Generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Music is one of my biggest passions, so I naturally gravitate towards apps and sites for and about music. The melody generator\", /*#__PURE__*/_jsxDEV(\"mark\", {\n                children: \" generates a random melody\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 28\n              }, this), \" based on a previously chosen scale with 1/4 and 1/8 notes. The goal is to implement music theory to generate more musical and appealing results. The \", /*#__PURE__*/_jsxDEV(\"mark\", {\n                children: \"biggest challenge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 32\n              }, this), \" here was to learn about\", /*#__PURE__*/_jsxDEV(\"mark\", {\n                children: [\" \", \"APIs and how to implement them in vanilla Javascript\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), \". It was quite overwhelming to keep an overview of all the elements, given that f.e. every note has a unique frequency and needs to be embedded correctly etc.\", /*#__PURE__*/_jsxDEV(\"mark\", {\n                children: [\" \", \"Now I know how crucial clean and transparent code is!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), \" \", \"Next time I would use React to build a similar project. I\\u2019ve used \", /*#__PURE__*/_jsxDEV(\"mark\", {\n                children: \"Bootstrap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 24\n              }, this), \" to streamline and facilitate styling. Now I\\u2019m familiar with the gist of the documentation and know what kind of project(s) I would use it for.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal\",\n            onClick: toggleModal,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MelodyGenerator, \"sP1b/JpjoRCNwkn2Eqx14q/q+oE=\");\n_c = MelodyGenerator;\nexport default MelodyGenerator;\nvar _c;\n$RefreshReg$(_c, \"MelodyGenerator\");","map":{"version":3,"names":["React","useState","Synth","MelodyGeneratorScr","jsxDEV","_jsxDEV","Fragment","_Fragment","MelodyGenerator","_s","modal","setModal","toggleModal","console","log","className","setClassName","handleHover","toggleClassCheck","children","src","onClick","onMouseOver","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marekpolgesek/Desktop/{coding, dev}/Frontend Projects/Portfolio/portfolio-website/src/Portfolio-Items/MelodyGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Synth from \"/Users/marekpolgesek/Desktop/{coding, dev}/Frontend Projects/Portfolio/portfolio-website/src/Images/GayestSynth.png\";\nimport \"./Portfolio.css\";\nimport \"animate.css\";\nimport MelodyGeneratorScr from \"../Images/MelodyGenerator.png\";\n\nconst MelodyGenerator = () => {\n  const [modal, setModal] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!modal), console.log(\"toggled\");\n  };\n\n  const [className, setClassName] = useState(false);\n\n  const handleHover = () => {\n    setClassName((className) => !className);\n  };\n\n  let toggleClassCheck = className\n    ? \" animate__animated animate__wobble\"\n    : null;\n\n  return (\n    <>\n      <main className=\"project-container\">\n        <div className=\"image-container\">\n          <img\n            src={Synth}\n            onClick={toggleModal}\n            className={`img${toggleClassCheck}`}\n            onMouseOver={handleHover}\n          ></img>\n        </div>\n        <div className=\"description-container\">\n          <h1>Melody Generator</h1>\n          <h3>Webdesign & Webdevelopment</h3>\n        </div>\n      </main>\n      {modal && (\n        <div className=\"modal\">\n          <div onClick={toggleModal} className=\"overlay\">\n            <div className=\"modal-content\">\n              <div></div>\n              <img src={MelodyGeneratorScr} className=\"screenshot\"></img>\n              <div className=\"project-description\">\n                <h1>Melody Generator</h1>\n                <p>\n                  Music is one of my biggest passions, so I naturally gravitate\n                  towards apps and sites for and about music. The melody\n                  generator<mark> generates a random melody</mark> based on a\n                  previously chosen scale with 1/4 and 1/8 notes. The goal is to\n                  implement music theory to generate more musical and appealing\n                  results. The <mark>biggest challenge</mark> here was to learn\n                  about\n                  <mark>\n                    {\" \"}\n                    APIs and how to implement them in vanilla Javascript\n                  </mark>\n                  . It was quite overwhelming to keep an overview of all the\n                  elements, given that f.e. every note has a unique frequency\n                  and needs to be embedded correctly etc.\n                  <mark>\n                    {\" \"}\n                    Now I know how crucial clean and transparent code is!\n                  </mark>{\" \"}\n                  Next time I would use React to build a similar project. I’ve\n                  used <mark>Bootstrap</mark> to streamline and facilitate\n                  styling. Now I’m familiar with the gist of the documentation\n                  and know what kind of project(s) I would use it for.\n                </p>\n              </div>\n              <button className=\"close-modal\" onClick={toggleModal}>\n                X\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MelodyGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}